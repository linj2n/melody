package cn.linj2n.melody.web.filter;
import cn.linj2n.melody.security.SecurityUtil;
import org.springframework.security.web.csrf.CsrfToken;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;
import org.springframework.web.util.WebUtils;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Arrays;
import java.util.Optional;

/**
 * Filter used to put the CSRF token generated by Spring Security in a cookie for use by AngularJS.
 */
@Component
public class AuthCookieGeneratorFilter extends OncePerRequestFilter {

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {
        String auctualAuthedResult = SecurityUtil.isAuthenticated() ? "true" : "false";
        String authResult = request.getHeader("AUTH");
        if (authResult == null || !authResult.equals(auctualAuthedResult)) {
            String pCookieName = "AUTH";
            Cookie cookie = new Cookie(pCookieName, auctualAuthedResult);
//            cookie.setMaxAge(-1);
            cookie.setHttpOnly(false);
            cookie.setPath("/");
            response.addCookie(cookie);
        }
        filterChain.doFilter(request, response);
    }
}
